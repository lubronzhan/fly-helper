#!/bin/bash
: ${FLY_TARGET?"Need the fly target FLY_TARGET to be set"}

: ${CONCOURSE_URL?"Need the concourse url"}

export CONCOURSE_URL="https://${CONCOURSE_URL#https://}"

open_pipeline() {
  local pipeline_name=${1?}
  open "$CONCOURSE_URL/teams/main/pipelines/${pipeline_name}"
}

open_cleanup_pipeline() {
  local lock_name=${1?"Need the lock name"}
  local pipeline_name=${2:-"all-envs-maintenance-master"}
  local cleanup_job_name="cleanup-$lock_name"

  build_info=$(get_recent_build $pipeline_name $cleanup_job_name)
  echo "$build_info"
  if [ -n "$build_info" ]; then
    build_num=$(echo $build_info | awk '{print $3}')
    open "$CONCOURSE_URL/teams/main/pipelines/${pipeline_name}/jobs/${cleanup_job_name}/builds/${build_num}"
  else
    open "$CONCOURSE_URL/teams/main/pipelines/${pipeline_name}/jobs/${cleanup_job_name}"
  fi
}


flyhijack() {
  local build_url=${1?}
  fly -t "$FLY_TARGET" hijack -u "$build_url"
}

cleanup_lock() {
  local lock_name=${1?"Need the lock name"}
  local pipeline_name=${2:-"all-envs-maintenance-master"}

  fly -t "$FLY_TARGET" trigger-job -j "${pipeline_name}/cleanup-${lock_name}"
}

get_recent_build() {
  local pipeline_name=${1?"Need the pipeline name"}
  local job_name=${2?"Need the job name"}
  local build_count=${3:-1}

  fly -t "$FLY_TARGET" builds -j ${pipeline_name}/${job_name} -c $build_count
}


